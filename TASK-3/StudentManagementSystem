import java.io.*;
import java.util.*;

public class StudentManagementSystem {
    private static final String FILENAME = "students.txt";
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        List<Student> students = readStudentsFromFile();
        boolean running = true;

        while (running) {
            System.out.println("Student Management System");
            System.out.println("1. Add a new student");
            System.out.println("2. Edit student information");
            System.out.println("3. Search for a student");
            System.out.println("4. Display all students");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    addStudent(students);
                    break;
                case 2:
                    editStudent(students);
                    break;
                case 3:
                    searchStudent(students);
                    break;
                case 4:
                    displayAllStudents(students);
                    break;
                case 5:
                    running = false;
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }

        writeStudentsToFile(students);
        System.out.println("Thank you for using the Student Management System.");
    }

    private static void addStudent(List<Student> students) {
        System.out.println("Enter student details:");
        System.out.print("Name: ");
        String name = scanner.nextLine();
        System.out.print("Age: ");
        int age = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Grade: ");
        String grade = scanner.nextLine();

        students.add(new Student(name, age, grade));
        System.out.println("Student added successfully.");
    }

    private static void editStudent(List<Student> students) {
        System.out.print("Enter student name to edit: ");
        String name = scanner.nextLine();

        for (Student student : students) {
            if (student.getName().equalsIgnoreCase(name)) {
                System.out.println("Enter new details for " + student.getName() + ":");
                System.out.print("Age: ");
                int age = scanner.nextInt();
                scanner.nextLine(); // Consume newline
                System.out.print("Grade: ");
                String grade = scanner.nextLine();

                student.setAge(age);
                student.setGrade(grade);
                System.out.println("Student information updated.");
                return;
            }
        }

        System.out.println("Student not found.");
    }

    private static void searchStudent(List<Student> students) {
        System.out.print("Enter student name to search: ");
        String name = scanner.nextLine();

        for (Student student : students) {
            if (student.getName().equalsIgnoreCase(name)) {
                System.out.println("Student found:");
                System.out.println(student);
                return;
            }
        }

        System.out.println("Student not found.");
    }

    private static void displayAllStudents(List<Student> students) {
        System.out.println("All Students:");
        for (Student student : students) {
            System.out.println(student);
        }
    }

    private static List<Student> readStudentsFromFile() {
        List<Student> students = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader(FILENAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                String name = parts[0];
                int age = Integer.parseInt(parts[1]);
                String grade = parts[2];
                students.add(new Student(name, age, grade));
            }
        } catch (IOException e) {
            // File does not exist or other IO error
        }
        return students;
    }

    private static void writeStudentsToFile(List<Student> students) {
        try (PrintWriter writer = new PrintWriter(new FileWriter(FILENAME))) {
            for (Student student : students) {
                writer.println(student.getName() + "," + student.getAge() + "," + student.getGrade());
            }
        } catch (IOException e) {
            System.out.println("Error writing to file: " + e.getMessage());
        }
    }
}

class Student {
    private String name;
    private int age;
    private String grade;

    public Student(String name, int age, String grade) {
        this.name = name;
        this.age = age;
        this.grade = grade;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getGrade() {
        return grade;
    }

    public void setGrade(String grade) {
        this.grade = grade;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Age: " + age + ", Grade: " + grade;
    }
}







cat NumberGuessingGame.java
import java.util.Scanner;
import java.util.Random;

public class NumberGuessingGame {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        System.out.println("Welcome to the Number Guessing Game!");
        System.out.println("=====================================");

        int minNumber = 1;
        int maxNumber = 100;
        int targetNumber;
        int attempts;
        int round = 1;
        String playAgain;

        do {
            targetNumber = random.nextInt(maxNumber - minNumber + 1) + minNumber;
            attempts = 0;
            System.out.println("\nRound " + round + ":");

            while (attempts < 3) {
                System.out.print("Guess the number between " + minNumber + " and " + maxNumber + ": ");
                int guess = scanner.nextInt();
                attempts++;

                if (guess == targetNumber) {
                    System.out.println("Congratulations! You guessed the correct number " + targetNumber + " in " + attempts + " attempts.");
                    break;
                } else if (guess < targetNumber) {
                    System.out.println("Too low! Try again.");
                } else {
                    System.out.println("Too high! Try again.");
                }
            }

            if (attempts >= 3 && targetNumber != -1) {
                System.out.println("Sorry! You have exceeded 3 attempts. The correct number was " + targetNumber + ".");
            }

            System.out.print("Do you want to play again? (yes/no): ");
            playAgain = scanner.next();
            round++;
        } while (playAgain.equalsIgnoreCase("yes"));

        System.out.println("Thank you for playing! Goodbye.");
        scanner.close();
    }
}
